# This file populates the Overview on Charmhub.
# See https://juju.is/docs/sdk/metadata-reference for a checklist and guidance.

# The charm package name, no spaces (required)
# Naming convention: https://juju.is/docs/sdk/naming#heading--naming-charms
name: demo-api-charm

display-name: |
  demo-fastapi-k8s

# mandatory
description: |
  This is a demo charm built on top of a small Python FastAPI server.
  This charm could be related to PostgreSQL charm and COS Lite bundle (Canonical Observability Stack).

# mandatory
summary: |
  FastAPI Demo charm for Kubernetes

# environment constraint
# assuming the latest major Juju version and a Kubernetes-type cloud
assumes:
  - juju >= 3.1
  - k8s-api

# defines charm relation/integration interface
requires:
  database:
    interface: postgresql_client
    limit: 1

# peer relation, for preserve charm's data
peers:
  fastapi-peer:
    interface: fastapi_demo_peers

# only for K8s charm
containers:
  demo-server:
    resource: demo-server-image

# used to populate the Resources tab on Charmhub
resources:
  # An OCI image resource for each container listed above.
  # You may remove this if your charm will run without a workload sidecar container.
  demo-server-image:
    type: oci-image
    description: OCI image from GitHub Container Repository
    # The upstream-source field is ignored by Juju.
    # It is included here as a reference so the integration testing suite knows which image to deploy during testing.
    # This field is also used by the 'canonical/charming-actions' GitHub action for automated releasing.
    # To deploy a local charm you need to explicitly define a --resource parameter with the same resource name and resource upstream source. Example:
    # juju deploy ./demo-api-charm_ubuntu-22.04-amd64.charm --resource demo-server-image=ghcr.io/canonical/api_demo_server:1.0.0
    upstream-source: ironcore864/api_demo_server:1.0.0
